{
    "swagger": "2.0",
    "info": {
      "description": "This is a simple API for managing items.",
      "version": "1.0.0",
      "title": "Item Management Service"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "tags": [
      {
        "name": "item",
        "description": "Everything about your Items"
      }
    ],
    "schemes": ["http"],
    "paths": {
      "/items": {
        "get": {
          "tags": ["item"],
          "summary": "List all items",
          "description": "Returns a list of items",
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Item"
                }
              }
            }
          }
        },
        "post": {
          "tags": ["item"],
          "summary": "Create a new item",
          "description": "Creates a new item",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Item object that needs to be added to the store",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Item"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Item created"
            }
          }
        }
      },
      "/items/{itemId}": {
        "get": {
          "tags": ["item"],
          "summary": "Find item by ID",
          "description": "Returns a single item",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "itemId",
              "in": "path",
              "description": "ID of item to return",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Item"
              }
            },
            "404": {
              "description": "Item not found"
            }
          }
        },
        "put": {
          "tags": ["item"],
          "summary": "Update an existing item",
          "description": "Updates an existing item",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "itemId",
              "in": "path",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "in": "body",
              "name": "body",
              "description": "Updated item object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Item"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Item updated"
            },
            "404": {
              "description": "Item not found"
            }
          }
        },
        "delete": {
          "tags": ["item"],
          "summary": "Delete an item",
          "description": "Deletes an item",
          "parameters": [
            {
              "name": "itemId",
              "in": "path",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "Item deleted"
            },
            "404": {
              "description": "Item not found"
            }
          }
        }
      }
    },
    "definitions": {
      "Item": {
        "type": "object",
        "required": ["name", "price"],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          }
        }
      }
    }
  }